silhouette {

  # Authenticator settings
  authenticator.cookieName = "authenticator"
  authenticator.cookiePath = "/"
  authenticator.secureCookie = false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  authenticator.httpOnlyCookie = false
  authenticator.useFingerprinting = true
  authenticator.authenticatorIdleTimeout = 30 minutes
  authenticator.authenticatorExpiry = 12 hours

  authenticator.rememberMe.cookieMaxAge = 30 days
  authenticator.rememberMe.authenticatorIdleTimeout = 5 days
  authenticator.rememberMe.authenticatorExpiry = 30 days

  authenticator.cookie.signer.key = "[changeme]" // A unique encryption key
  authenticator.cookie.signer.key = ${?COOKIE_SIGNER_KEY} // A unique encryption key
  authenticator.crypter.key = "[changeme]" // A unique encryption key
  authenticator.crypter.key = ${?CRYPTER_KEY} // A unique encryption key

  # OAuth1 token secret provider settings
  oauth1TokenSecretProvider.cookieName = "OAuth1TokenSecret"
  oauth1TokenSecretProvider.cookiePath = "/"
  oauth1TokenSecretProvider.secureCookie = false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  oauth1TokenSecretProvider.httpOnlyCookie = true
  oauth1TokenSecretProvider.expirationTime = 5 minutes

  oauth1TokenSecretProvider.cookie.signer.key = "[changeme]" // A unique encryption key
  oauth1TokenSecretProvider.cookie.signer.key = ${?COOKIE_SIGNER_KEY} // A unique encryption key
  oauth1TokenSecretProvider.crypter.key = "[changeme]" // A unique encryption key
  oauth1TokenSecretProvider.crypter.key = ${?CRYPTER_KEY}  // A unique encryption key

  # OAuth2 state provider settings
  oauth2StateProvider.cookieName = "OAuth2State"
  oauth2StateProvider.cookiePath = "/"
  oauth2StateProvider.secureCookie = false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  oauth2StateProvider.httpOnlyCookie = true
  oauth2StateProvider.expirationTime = 5 minutes

  oauth2StateProvider.cookie.signer.key = "[changeme]" // A unique encryption key
  oauth2StateProvider.cookie.signer.key = ${?COOKIE_SIGNER_KEY} // A unique encryption key

  # Spotify provider
  spotify {
    authorizationURL = "https://accounts.spotify.com/authorize"
    accessTokenURL = "https://accounts.spotify.com/api/token"
    redirectURL = "http://dataplug.hat.org:9000/authenticate/spotify"
    redirectURL = ${?SPOTIFY_CALLBACK_URL}
    refreshURL = "https://accounts.spotify.com/api/token"
    clientID = ""
    clientID = ${?SPOTIFY_CLIENT_ID}
    clientSecret = ""
    clientSecret = ${?SPOTIFY_CLIENT_SECRET}
    scope = "user-read-private user-read-birthdate user-read-email user-read-recently-played"
//    authorizationParams {
//      response_type = "code"
//    }
    customProperties {
      authorization_header_prefix = "Basic"
    }
  }
}