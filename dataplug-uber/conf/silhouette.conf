silhouette {

  # Authenticator settings
  authenticator.cookieName="authenticator"
  authenticator.cookiePath="/"
  authenticator.secureCookie=false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  authenticator.httpOnlyCookie=true
  authenticator.useFingerprinting=true
  authenticator.authenticatorIdleTimeout=30 minutes
  authenticator.authenticatorExpiry=12 hours

  authenticator.rememberMe.cookieMaxAge=30 days
  authenticator.rememberMe.authenticatorIdleTimeout=5 days
  authenticator.rememberMe.authenticatorExpiry=30 days

  authenticator.signer.key = ${?COOKIE_SIGNER_KEY} // A unique encryption key
  authenticator.crypter.key = ${?CRYPTER_KEY} // A unique encryption key

  # OAuth1 token secret provider settings
  oauth1TokenSecretProvider.cookieName="OAuth1TokenSecret"
  oauth1TokenSecretProvider.cookiePath="/"
  oauth1TokenSecretProvider.secureCookie=false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  oauth1TokenSecretProvider.httpOnlyCookie=true
  oauth1TokenSecretProvider.expirationTime=5 minutes

  oauth1TokenSecretProvider.signer.key = ${?COOKIE_SIGNER_KEY} // A unique encryption key
  oauth1TokenSecretProvider.crypter.key = ${?CRYPTER_KEY} // A unique encryption key

  # Social state handler
  socialStateHandler.signer.key = ${?COOKIE_SIGNER_KEY} // A unique encryption key

  # CSRF state item handler settings
  csrfStateItemHandler.cookieName="OAuth2State"
  csrfStateItemHandler.cookiePath="/"
  csrfStateItemHandler.secureCookie=false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  csrfStateItemHandler.httpOnlyCookie=true
  csrfStateItemHandler.expirationTime=5 minutes

  csrfStateItemHandler.signer.key = ${?COOKIE_SIGNER_KEY} // A unique encryption key

  # Google provider
  uber.authorizationURL = "https://login.uber.com/oauth/v2/authorize"
  uber.accessTokenURL = "https://login.uber.com/oauth/v2/token"
  uber.redirectURL = "https://dataplug.hat.org:9443/authenticate/uber"
  uber.redirectURL = ${?UBER_CALLBACK_URL}
  uber.refreshURL = "https://login.uber.com/oauth/v2/token"
  uber.clientID = ""
  uber.clientID = ${?UBER_CLIENT_ID}
  uber.clientSecret = ""
  uber.clientSecret = ${?UBER_CLIENT_SECRET}
  uber.scope = "profile history all_trips places"
}
