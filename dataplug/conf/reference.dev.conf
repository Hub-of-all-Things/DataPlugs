include "reference.conf"

play.crypto.secret = ""
play.crypto.secret=${?APPLICATION_SECRET}

play.i18n.langs = ["en"]

administrators = ["andrius.aucinas@dataswift.io"]

play.modules {
//  enabled += "org.hatdex.dataplugCalendar.Module"
}

play {
  server {
    pidfile.path = "/tmp/RUNNING_PID"
  }
}

auth.allowedResources = ["http://dataplug.hat.org"]

service {
  name = "Facebook"
  scheme = "http://"
  address = "DATAPLUG.dataswift.io"
  hatCredentials {
    username = ${?HAT_USER}
    password = ${?HAT_PASSWORD}
  }

  dex {
    address = "dex.dataswift.io"
    scheme = "https://"
    accessToken = ${?MS_ACCESS_TOKEN}
    dataplugId = ${?MS_DATAPLUG_ID}
  }
}

db.default = {
  driver = org.postgresql.Driver
  url = "jdbc:postgresql://localhost/dataplug"
  url = ${?DATABASE_URL}
  username = ${?DATABASE_USER}
  password = ${?DATABASE_PASSWORD}
}

play.evolutions.enabled = false

silhouette {

  # Authenticator settings
  authenticator.cookieName = "authenticator"
  authenticator.cookiePath = "/"
  authenticator.secureCookie = false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  authenticator.httpOnlyCookie = false
  authenticator.useFingerprinting = true
  authenticator.authenticatorIdleTimeout = 30 minutes
  authenticator.authenticatorExpiry = 12 hours

  authenticator.rememberMe.cookieMaxAge = 30 days
  authenticator.rememberMe.authenticatorIdleTimeout = 5 days
  authenticator.rememberMe.authenticatorExpiry = 30 days

  authenticator.cookie.signer.key = ${?COOKIE_SIGNER_KEY} // A unique encryption key
  authenticator.crypter.key = ${?CRYPTER_KEY} // A unique encryption key

  # OAuth1 token secret provider settings
  oauth1TokenSecretProvider.cookieName = "OAuth1TokenSecret"
  oauth1TokenSecretProvider.cookiePath = "/"
  oauth1TokenSecretProvider.secureCookie = false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  oauth1TokenSecretProvider.httpOnlyCookie = true
  oauth1TokenSecretProvider.expirationTime = 5 minutes

  oauth1TokenSecretProvider.cookie.signer.key = ${?COOKIE_SIGNER_KEY} // A unique encryption key
  oauth1TokenSecretProvider.crypter.key = ${?CRYPTER_KEY} // A unique encryption key

  # OAuth2 state provider settings
  oauth2StateProvider.cookieName = "OAuth2State"
  oauth2StateProvider.cookiePath = "/"
  oauth2StateProvider.secureCookie = false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  oauth2StateProvider.httpOnlyCookie = true
  oauth2StateProvider.expirationTime = 5 minutes

  oauth2StateProvider.cookie.signer.key = ${?COOKIE_SIGNER_KEY} // A unique encryption key
}
